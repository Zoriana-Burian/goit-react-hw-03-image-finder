{"version":3,"sources":["components/Button/Button.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Section/Section.module.css","services/api-services.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Loader/Loader.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","fetchApi","fetchHitsImages","searchQuery","currentPage","axios","get","then","response","data","hits","Searchbar","state","query","handlerChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","props","onSubmit","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","Button","onButton","Butt","onClick","ImageGalleryItem","webformatURL","largeImageURL","clickOpenModal","ImageGalleryItemImage","src","data-source","alt","ImageGallery","map","id","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClickModal","handleBackdrop","target","window","addEventListener","removeEventListener","createPortal","Overlay","LoaderSpiner","loader","color","height","width","timeout","Section","children","section","App","isLoading","showModal","error","onToggleModal","dataset","source","scrollImages","scrollBy","top","documentElement","clientHeight","behavior","onChangeQuery","fetchHits","options","newApi","prevState","catch","finally","prevProps","length","onScroll","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d415483.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Butt\":\"Button_Butt__2DSuC\",\"Button\":\"Button_Button__3TYsL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2-sMl\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1JEv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2iXY-\",\"Modal\":\"Modal_Modal__2XcN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3XdTD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2fG38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__EWaRp\"};","import axios from 'axios';\r\n\r\nconst fetchHitsImages = ({searchQuery = '', currentPage = 1}) => {\r\n  return axios.get(`https://pixabay.com/api/?key=19054407-f71c417dea239df63beb23abd&q=${searchQuery}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits);\r\n}\r\n\r\nconst fetchApi = { fetchHitsImages }\r\nexport default  fetchApi;","import React, { Component } from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        query: '',\r\n    }\r\n\r\n    handlerChange = event => {\r\n        this.setState({ query: event.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n       e.preventDefault();\r\n\r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({ query: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className={s.Searchbar}>\r\n                <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className={s.SearchFormButton}>\r\n                        <span className={s.SearchFormButtonLabel}>Search</span>\r\n    </button>\r\n\r\n         <input\r\n       onChange={this.handlerChange}\r\n      className={s.SearchFormInput}\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n    />\r\n  </form>\r\n</header>\r\n        );\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired, \r\n}\r\n\r\nexport default Searchbar;","import s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onButton }) => (\r\n    <div className={s.Butt}>\r\n        <button className={s.Button} type='button' onClick={onButton}>Load more</button> \r\n    </div>\r\n        \r\n);\r\n\r\nButton.propTypes = {\r\n  onButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n\r\n\r\n\r\n\r\n","import s from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, clickOpenModal }) => (\r\n    <li className={s.ImageGalleryItem} >\r\n        <img className={s.ImageGalleryItemImage} src={webformatURL} data-source={largeImageURL} onClick={clickOpenModal} alt=''/>\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n    clickOpenModal: PropTypes.func.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ hits, clickOpenModal }) => (\r\n    <ul className={s.ImageGallery}>\r\n        {hits.map(({ id, webformatURL, largeImageURL }) => \r\n            <ImageGalleryItem key={id} webformatURL={ webformatURL} largeImageURL={ largeImageURL} clickOpenModal={clickOpenModal} />)}\r\n      </ul>\r\n)\r\n\r\nImageGallery.propTypes = {\r\n    clickOpenModal: PropTypes.func.isRequired,\r\n    hits: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React, { Component } from 'react';\r\nimport s from './Modal.module.css';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown)   \r\n        }\r\n\r\n    componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n \r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') { \r\n                this.props.onClickModal();\r\n            }}\r\n\r\n    handleBackdrop = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClickModal();\r\n        }\r\n    }\r\n    render() {\r\n        return createPortal(\r\n            <div className={s.Overlay} onClick={this.handleBackdrop}>\r\n                <div><img className={s.Modal} src={this.props.largeImageURL} alt='' /></div>\r\n            </div>,\r\n            modalRoot\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    onClickModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Modal;","import Loader from \"react-loader-spinner\";\r\nimport React, { Component } from 'react';\r\nimport s from './Loader.module.css';\r\n\r\nexport default class LoaderSpiner extends Component {\r\n  //other logic\r\n  render() {\r\n      return (\r\n        <div className={s.loader}>\r\n         <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={0} //0 secs\r\n      />     \r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <div className={s.section}>\r\n         {children}\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","//import logo from './logo.svg';\n//import './App.css';\nimport React, { Component } from 'react';\n//import axios from 'axios';\nimport newApi from './services/api-services';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Button from './components/Button/Button';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport LoaderSpiner from './components/Loader/Loader';\nimport Section from './components/Section/Section';\n\n\nclass App extends Component {\n  state = {\n    hits: [],\n    currentPage: 1,\n    searchQuery: '',\n    largeImageURL: '',\n    isLoading: false,\n    showModal: false,\n    error: null,\n  };\n\n  onToggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    })); \n  }\n\n  clickOpenModal = e => {\n    this.setState({\n      largeImageURL: e.target.dataset.source}\n  )\n    this.onToggleModal();\n  }\n\n  scrollImages = () => {\n     window.scrollBy({\n  top: document.documentElement.clientHeight - 100,\n  behavior: 'smooth',\n});\n  }\n \n \n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchHits();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({ searchQuery: query, currentPage: 1, hits: [], error: null, });\n    \n  }\n  \n  fetchHits = () => {\n    \n    const { currentPage, searchQuery } = this.state;\n    \n    this.setState({ isLoading: true });\n  \n    const options = { currentPage, searchQuery };\n    \n    newApi.fetchHitsImages(options)\n      .then(hits => {\n        this.setState(prevState => ({\n          hits: [...prevState.hits, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }))\n      })\n      .catch(error => this.setState({error}))\n      .finally(() => this.setState({ isLoading: false }));\n    \n    //this.scrolImages();\n  }\n  \n\n  render() {\n    const { hits, isLoading, showModal, largeImageURL, error } = this.state;\n\n    return <div>\n      {error && <h1> Перезавантажте, будь ласка, ще раз сторінку </h1>}\n      <Section>\n        \n        {showModal && <Modal onClickModal={this.onToggleModal} largeImageURL={largeImageURL} />}\n\n      <Searchbar onSubmit={this.onChangeQuery}/>\n      <ImageGallery hits={hits} clickOpenModal={this.clickOpenModal} />\n\n      {isLoading && <LoaderSpiner/>}\n      \n      {hits.length > 0 && !isLoading &&\n          <Button onButton={this.fetchHits} onScroll={ this.scrollImages()}/>\n    }\n      </Section>\n      \n      \n    </div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__MM1ej\",\"SearchForm\":\"Searchbar_SearchForm__2ly1z\",\"SearchFormButton\":\"Searchbar_SearchFormButton__flQ_5\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1Xyb-\",\"SearchFormInput\":\"Searchbar_SearchFormInput__16iD6\"};"],"sourceRoot":""}